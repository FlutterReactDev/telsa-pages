function BOOMR_check_doc_domain(e) {
  if (("performance" in window && window.performance && "function" == typeof window.performance.mark && !window.BOOMR_no_mark && window.performance.mark("boomr:check_doc_domain"), window)) {
      if (!e) {
          if (window.parent === window || !document.getElementById("boomr-if-as")) return;
          if (window.BOOMR && BOOMR.boomerang_frame && BOOMR.window)
              try {
                  BOOMR.boomerang_frame.document.domain !== BOOMR.window.document.domain && (BOOMR.boomerang_frame.document.domain = BOOMR.window.document.domain);
              } catch (e) {
                  BOOMR.isCrossOriginError(e) || BOOMR.addError(e, "BOOMR_check_doc_domain.domainFix");
              }
          e = document.domain;
      }
      if (e && -1 !== e.indexOf(".") && window.parent) {
          try {
              return void window.parent.document;
          } catch (n) {
              try {
                  document.domain = e;
              } catch (e) {
                  return;
              }
          }
          try {
              return void window.parent.document;
          } catch (n) {
              e = e.replace(/^[\w\-]+\./, "");
          }
          BOOMR_check_doc_domain(e);
      }
  }
}
"performance" in window && window.performance && "function" == typeof window.performance.mark && !window.BOOMR_no_mark && window.performance.mark("boomr:startup"),
  (BOOMR_start = new Date().getTime()),
  BOOMR_check_doc_domain(),
  (function (e) {
      var n,
          t,
          r,
          o,
          i,
          a,
          s,
          u = e;
      if (
          (e.parent !== e && document.getElementById("boomr-if-as") && "script" === document.getElementById("boomr-if-as").nodeName.toLowerCase() && (e = e.parent),
          (r = e.document),
          e.BOOMR || (e.BOOMR = {}),
          (BOOMR = e.BOOMR),
          !BOOMR.version)
      ) {
          if (
              ((BOOMR.version = "%boomerang_version%"),
              (BOOMR.window = e),
              (BOOMR.boomerang_frame = u),
              BOOMR.plugins || (BOOMR.plugins = {}),
              (function () {
                  try {
                      void 0 !== new e.CustomEvent("CustomEvent") &&
                          (o = function (n, t) {
                              return new e.CustomEvent(n, t);
                          });
                  } catch (e) {}
                  try {
                      !o &&
                          r.createEvent &&
                          r.createEvent("CustomEvent") &&
                          (o = function (e, n) {
                              var t = r.createEvent("CustomEvent");
                              return (n = n || { cancelable: !1, bubbles: !1 }), t.initCustomEvent(e, n.bubbles, n.cancelable, n.detail), t;
                          });
                  } catch (e) {}
                  !o &&
                      r.createEventObject &&
                      (o = function (e, n) {
                          var t = r.createEventObject();
                          return (t.type = t.propertyName = e), (t.detail = n.detail), t;
                      }),
                      o || (o = function () {});
              })(),
              (i = function (e, n, t) {
                  var i = o(e, { detail: n });
                  function a() {
                      try {
                          r.dispatchEvent ? r.dispatchEvent(i) : r.fireEvent && r.fireEvent("onpropertychange", i);
                      } catch (n) {
                          BOOMR.debug("Error when dispatching " + e);
                      }
                  }
                  i && (t ? BOOMR.setImmediate(a) : a());
              }),
              void 0 !== r.hidden
                  ? ((a = "visibilityState"), (s = "visibilitychange"))
                  : void 0 !== r.mozHidden
                  ? ((a = "mozVisibilityState"), (s = "mozvisibilitychange"))
                  : void 0 !== r.msHidden
                  ? ((a = "msVisibilityState"), (s = "msvisibilitychange"))
                  : void 0 !== r.webkitHidden && ((a = "webkitVisibilityState"), (s = "webkitvisibilitychange")),
              (n = {
                  beacon_url: "",
                  beacon_url_force_https: !0,
                  beacon_urls_allowed: [],
                  beacon_type: "AUTO",
                  beacon_auth_key: "Authorization",
                  beacon_auth_token: void 0,
                  beacon_with_credentials: !1,
                  beacon_disable_sendbeacon: !1,
                  site_domain: e.location.hostname.replace(/.*?([^.]+\.[^.]+)\.?$/, "$1").toLowerCase(),
                  user_ip: "",
                  autorun: !0,
                  hasSentPageLoadBeacon: !1,
                  r: void 0,
                  events: {
                      page_ready: [],
                      page_unload: [],
                      before_unload: [],
                      dom_loaded: [],
                      visibility_changed: [],
                      prerender_to_visible: [],
                      before_beacon: [],
                      beacon: [],
                      page_load_beacon: [],
                      xhr_load: [],
                      click: [],
                      form_submit: [],
                      config: [],
                      xhr_init: [],
                      spa_init: [],
                      spa_navigation: [],
                      spa_cancel: [],
                      xhr_send: [],
                      xhr_error: [],
                      error: [],
                      netinfo: [],
                      rage_click: [],
                  },
                  public_events: { before_beacon: "onBeforeBoomerangBeacon", beacon: "onBoomerangBeacon", onboomerangloaded: "onBoomerangLoaded" },
                  translate_events: { onbeacon: "beacon", onconfig: "config", onerror: "error", onxhrerror: "xhr_error" },
                  unloadEventsCount: 0,
                  unloadEventCalled: 0,
                  listenerCallbacks: {},
                  vars: {},
                  singleBeaconVars: {},
                  varPriority: { "-1": {}, 1: {} },
                  errors: {},
                  disabled_plugins: {},
                  localStorageSupported: !1,
                  LOCAL_STORAGE_PREFIX: "_boomr_",
                  nativeOverwrites: [],
                  xb_handler: function (t) {
                      return function (r) {
                          var o;
                          r || (r = e.event),
                              r.target ? (o = r.target) : r.srcElement && (o = r.srcElement),
                              3 === o.nodeType && (o = o.parentNode),
                              (o && o.nodeName && "OBJECT" === o.nodeName.toUpperCase() && "application/x-shockwave-flash" === o.type) || n.fireEvent(t, o);
                      };
                  },
                  clearEvents: function () {
                      var e;
                      for (e in this.events) this.events.hasOwnProperty(e) && (this.events[e] = []);
                  },
                  clearListeners: function () {
                      var e;
                      for (e in n.listenerCallbacks) if (n.listenerCallbacks.hasOwnProperty(e)) for (; n.listenerCallbacks[e].length; ) BOOMR.utils.removeListener(n.listenerCallbacks[e][0].el, e, n.listenerCallbacks[e][0].fn);
                      n.listenerCallbacks = {};
                  },
                  fireEvent: function (e, n) {
                      var t, r, o, a;
                      if (((e = e.toLowerCase()), BOOMR.utils.mark("fire_event"), BOOMR.utils.mark("fire_event:" + e + ":start"), this.translate_events[e] && (e = this.translate_events[e]), this.events.hasOwnProperty(e))) {
                          for (this.public_events.hasOwnProperty(e) && i(this.public_events[e], n), o = this.events[e], "before_beacon" !== e && "beacon" !== e && BOOMR.real_sendBeacon(), a = o.length, t = 0; t < a; t++)
                              try {
                                  (r = o[t]).fn.call(r.scope, n, r.cb_data);
                              } catch (n) {
                                  BOOMR.addError(n, "fireEvent." + e + "<" + t + ">");
                              }
                          for (t = 0; t < a; t++) o[t].once && (o.splice(t, 1), a--, t--);
                          BOOMR.utils.mark("fire_event:" + e + ":end"), BOOMR.utils.measure("fire_event:" + e, "fire_event:" + e + ":start", "fire_event:" + e + ":end");
                      }
                  },
                  spaNavigation: function () {
                      n.onloadfired = !0;
                  },
                  beaconUrlAllowed: function (e) {
                      if (!n.beacon_urls_allowed || 0 === n.beacon_urls_allowed.length) return !0;
                      for (var t = 0; t < n.beacon_urls_allowed.length; t++) {
                          if (new RegExp(n.beacon_urls_allowed[t]).exec(e)) return !0;
                      }
                      return !1;
                  },
                  checkLocalStorageSupport: function () {
                      var t = n.LOCAL_STORAGE_PREFIX + "clss";
                      n.localStorageSupported = !1;
                      try {
                          if (!e.JSON || !e.localStorage) return;
                          e.localStorage.setItem(t, t), (n.localStorageSupported = e.localStorage.getItem(t) === t), e.localStorage.removeItem(t);
                      } catch (e) {
                          n.localStorageSupported = !1;
                      }
                  },
                  onFrameUnloaded: function () {
                      var e, t;
                      for (BOOMR.isUnloaded = !0, e = 0; e < n.nativeOverwrites.length; e++) (t = n.nativeOverwrites[e]).obj[t.functionName] = t.origFn;
                      n.nativeOverwrites = [];
                  },
              }),
              (t = {
                  t_start: BOOMR_start,
                  t_end: void 0,
                  url: "",
                  config_url: null,
                  loadedLate: !1,
                  beaconsSent: 0,
                  isUnloaded: !1,
                  beaconInQueue: !1,
                  constants: { BEACON_TYPE_SPAS: ["spa", "spa_hard"], MAX_GET_LENGTH: 2e3 },
                  session: { domain: n.site_domain, ID: Math.random().toString(36).replace(/^0\./, ""), start: void 0, length: 0, enabled: !0 },
                  utils: {
                      hasPostMessageSupport: function () {
                          return !(!e.postMessage || ("function" != typeof e.postMessage && "object" != typeof e.postMessage));
                      },
                      objectToString: function (e, n, t) {
                          var r,
                              o = [];
                          if (!e || "object" != typeof e) return e;
                          if ((void 0 === n && (n = "\n\t"), t || (t = 0), BOOMR.utils.isArray(e))) {
                              for (r = 0; r < e.length; r++)
                                  t > 0 && null !== e[r] && "object" == typeof e[r] ? o.push(this.objectToString(e[r], n + ("\n\t" === n ? "\t" : ""), t - 1)) : "&" === n ? o.push(encodeURIComponent(e[r])) : o.push(e[r]);
                              n = ",";
                          } else
                              for (r in e)
                                  Object.prototype.hasOwnProperty.call(e, r) &&
                                      (t > 0 && null !== e[r] && "object" == typeof e[r]
                                          ? o.push(encodeURIComponent(r) + "=" + this.objectToString(e[r], n + ("\n\t" === n ? "\t" : ""), t - 1))
                                          : "&" === n
                                          ? o.push(encodeURIComponent(r) + "=" + encodeURIComponent(e[r]))
                                          : o.push(r + "=" + e[r]));
                          return o.join(n);
                      },
                      getCookie: function (e) {
                          return e
                              ? (BOOMR.utils.mark("get_cookie"),
                                (e = " " + e + "="),
                                (n = (t = " " + r.cookie + ";").indexOf(e)) >= 0 ? ((n += e.length), (t = t.substring(n, t.indexOf(";", n)).replace(/^"/, "").replace(/"$/, ""))) : void 0)
                              : null;
                          var n, t;
                      },
                      setCookie: function (e, n, t) {
                          var o, i, a, s, u;
                          if (!e || !BOOMR.session.domain || void 0 === n) return BOOMR.debug("Invalid parameters or site domain: " + e + "/" + n + "/" + BOOMR.session.domain), BOOMR.addVar("nocookie", 1), !1;
                          if ((BOOMR.utils.mark("set_cookie"), (i = e + '="' + (o = this.objectToString(n, "&")) + '"').length < 500)) {
                              if (
                                  ((s = [i, "path=/", "domain=" + BOOMR.session.domain]),
                                  "number" == typeof t && ((u = new Date()).setTime(u.getTime() + 1e3 * t), (u = u.toGMTString()), s.push("expires=" + u)),
                                  (r.cookie = s.join("; ")),
                                  o === (a = this.getCookie(e)) || (void 0 === a && "number" == typeof t && t <= 0))
                              )
                                  return !0;
                              BOOMR.warn("Saved cookie value doesn't match what we tried to set:\n" + o + "\n" + a);
                          } else BOOMR.warn("Cookie too long: " + i.length + " " + i);
                          return BOOMR.addVar("nocookie", 1), !1;
                      },
                      getSubCookies: function (e) {
                          var n,
                              t,
                              r,
                              o,
                              i = !1,
                              a = {};
                          if (!e) return null;
                          if ("string" != typeof e) return BOOMR.debug("TypeError: cookie is not a string: " + typeof e), null;
                          for (t = 0, r = (n = e.split("&")).length; t < r; t++) (o = n[t].split("="))[0] && (o.push(""), (a[decodeURIComponent(o[0])] = decodeURIComponent(o[1])), (i = !0));
                          return i ? a : null;
                      },
                      removeCookie: function (e) {
                          return this.setCookie(e, {}, -86400);
                      },
                      getLocalStorage: function (t) {
                          var r, o;
                          if (!t || !n.localStorageSupported) return null;
                          BOOMR.utils.mark("get_local_storage");
                          try {
                              if (null === (r = e.localStorage.getItem(n.LOCAL_STORAGE_PREFIX + t))) return;
                              o = e.JSON.parse(r);
                          } catch (e) {
                              return BOOMR.warn(e), null;
                          }
                          return o && "object" == typeof o.items ? ("number" == typeof o.expires && BOOMR.now() >= o.expires ? void this.removeLocalStorage(t) : o.items) : (this.removeLocalStorage(t), null);
                      },
                      setLocalStorage: function (t, r, o) {
                          var i, a, s;
                          if (!t || !n.localStorageSupported || "object" != typeof r) return !1;
                          if ((BOOMR.utils.mark("set_local_storage"), (i = { items: r }), "number" == typeof o && (i.expires = BOOMR.now() + 1e3 * o), (a = e.JSON.stringify(i)).length < 5e4)) {
                              try {
                                  if ((e.localStorage.setItem(n.LOCAL_STORAGE_PREFIX + t, a), a === (s = e.localStorage.getItem(n.LOCAL_STORAGE_PREFIX + t)))) return !0;
                              } catch (e) {}
                              BOOMR.warn("Saved storage value doesn't match what we tried to set:\n" + a + "\n" + s);
                          } else BOOMR.warn("Storage items too large: " + a.length + " " + a);
                          return !1;
                      },
                      removeLocalStorage: function (t) {
                          if (!t || !n.localStorageSupported) return !1;
                          try {
                              return e.localStorage.removeItem(n.LOCAL_STORAGE_PREFIX + t), !0;
                          } catch (e) {}
                          return !1;
                      },
                      cleanupURL: function (e, t) {
                          if (!e || BOOMR.utils.isArray(e)) return "";
                          if ((n.strip_query_string && (e = e.replace(/\?.*/, "?qs-redacted")), void 0 !== t && e && e.length > t)) {
                              var r = e.indexOf("?");
                              e = -1 !== r && r < t ? e.substr(0, r) + "?..." : e.substr(0, t - 3) + "...";
                          }
                          return e;
                      },
                      hashQueryString: function (e, n) {
                          return e
                              ? e.match
                                  ? (e.match(/^\/\//) && (e = location.protocol + e),
                                    e.match(/^(https?|file):/)
                                        ? (n && (e = e.replace(/#.*/, "")),
                                          BOOMR.utils.MD5
                                              ? e.replace(/\?([^#]*)/, function (e, n) {
                                                    return "?" + (n.length > 10 ? BOOMR.utils.MD5(n) : n);
                                                })
                                              : e)
                                        : (BOOMR.error("Passed in URL is invalid: " + e), ""))
                                  : (BOOMR.addError("TypeError: Not a string", "hashQueryString", typeof e), "")
                              : e;
                      },
                      pluginConfig: function (e, n, t, r) {
                          var o,
                              i = 0;
                          if (!n || !n[t]) return !1;
                          for (o = 0; o < r.length; o++) void 0 !== n[t][r[o]] && ((e[r[o]] = n[t][r[o]]), i++);
                          return i > 0;
                      },
                      arrayFilter: function (e, n) {
                          var t = [];
                          if (!(this.isArray(e) || (e && "number" == typeof e.length)) || "function" != typeof n) return t;
                          if ("function" == typeof e.filter) t = e.filter(n);
                          else for (var r, o = -1, i = e.length; ++o < i; ) n((r = e[o]), o, e) && (t[t.length] = r);
                          return t;
                      },
                      arrayFind: function (e, n) {
                          if ((this.isArray(e) || (e && "number" == typeof e.length)) && "function" == typeof n) {
                              if ("function" == typeof e.find) return e.find(n);
                              for (var t, r = -1, o = e.length; ++r < o; ) if (n((t = e[r]), r, e)) return t;
                          }
                      },
                      isMutationObserverSupported: function () {
                          return !(e && e.navigator && e.navigator.userAgent && e.navigator.userAgent.match(/Trident.*rv[ :]*11\./)) && e && e.MutationObserver && "function" == typeof e.MutationObserver;
                      },
                      addObserver: function (n, t, r, o, i, a) {
                          var s,
                              u,
                              l = { observer: null, timer: null };
                          if ((BOOMR.utils.mark("add_observer"), !this.isMutationObserverSupported() || !o || !n)) return null;
                          function c(e) {
                              var n = !1;
                              BOOMR.utils.mark("mutation_observer_callback"),
                                  l.timer && (clearTimeout(l.timer), (l.timer = null)),
                                  o && ((n = o.call(a, e, i)) || (o = null)),
                                  !n && l.observer && (l.observer.disconnect(), (l.observer = null)),
                                  "number" == typeof n && n > 0 && (l.timer = setTimeout(c, n));
                          }
                          return (
                              (s = e.MutationObserver),
                              e.Zone &&
                                  "function" == typeof e.Zone.__symbol__ &&
                                  (u = e.Zone.__symbol__("MutationObserver")) &&
                                  "string" == typeof u &&
                                  e.hasOwnProperty(u) &&
                                  "function" == typeof e[u] &&
                                  (BOOMR.debug("Detected Zone.js, using native MutationObserver"), (s = e[u])),
                              (l.observer = new s(c)),
                              r && (l.timer = setTimeout(c, l.timeout)),
                              l.observer.observe(n, t),
                              l
                          );
                      },
                      addListener: function (e, t, r, o) {
                          var i = !1;
                          BOOMR.utils.mark("add_listener"),
                              e.addEventListener ? (o && BOOMR.browser.supportsPassive() && (i = { capture: !1, passive: !0 }), e.addEventListener(t, r, i)) : e.attachEvent && e.attachEvent("on" + t, r),
                              (n.listenerCallbacks[t] = n.listenerCallbacks[t] || []),
                              n.listenerCallbacks[t].push({ el: e, fn: r });
                      },
                      removeListener: function (e, t, r) {
                          if ((BOOMR.utils.mark("remove_listener"), e.removeEventListener ? e.removeEventListener(t, r, !1) : e.detachEvent && e.detachEvent("on" + t, r), n.listenerCallbacks.hasOwnProperty(t)))
                              for (var o = 0; o < n.listenerCallbacks[t].length; o++) if (r === n.listenerCallbacks[t][o].fn && e === n.listenerCallbacks[t][o].el) return void n.listenerCallbacks[t].splice(o, 1);
                      },
                      isArray: function (e) {
                          return "[object Array]" === Object.prototype.toString.call(e);
                      },
                      inArray: function (e, n) {
                          var t;
                          if (void 0 === e || void 0 === n || !n.length) return !1;
                          for (t = 0; t < n.length; t++) if (n[t] === e) return !0;
                          return !1;
                      },
                      getQueryParamValue: function (e, n) {
                          var t, r, o, i;
                          if (!e) return null;
                          for (
                              "string" == typeof n ? ((t = BOOMR.window.document.createElement("a")).href = n) : (t = "object" == typeof n && "string" == typeof n.search ? n : BOOMR.window.location),
                                  r = t.search.slice(1).split(/&/),
                                  o = 0;
                              o < r.length;
                              o++
                          )
                              if (r[o] && (i = r[o].split("=")).length && i[0] === e) return i.length > 1 ? decodeURIComponent(i.splice(1).join("=").replace(/\+/g, " ")) : "";
                          return null;
                      },
                      generateUUID: function () {
                          return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) {
                              var n = (16 * Math.random()) | 0;
                              return ("x" === e ? n : (3 & n) | 8).toString(16);
                          });
                      },
                      generateId: function (e) {
                          return "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx".substr(0, e || 40).replace(/x/g, function (e) {
                              return "0" === (e = (Math.random() || 0.01).toString(36)) ? "0" : e.substr(2, 1);
                          });
                      },
                      serializeForUrl: function (e) {
                          return BOOMR.utils.Compression && BOOMR.utils.Compression.jsUrl ? BOOMR.utils.Compression.jsUrl(e) : window.JSON ? JSON.stringify(e) : (BOOMR.debug("JSON is not supported"), "");
                      },
                      getMyURL: function () {
                          var e,
                              n = document.currentScript || document.getElementById("boomr-if-as") || document.getElementById("boomr-scr-as");
                          if (n) return n.src;
                          var t,
                              r = document.getElementsByTagName("script");
                          for (t = r.length; t--; ) if ("interactive" === r[t].readyState) return r[t].src;
                          try {
                              throw new Error();
                          } catch (n) {
                              if (
                                  "stack" in n &&
                                  (e = this.arrayFilter(n.stack.split(/\n/), function (e) {
                                      return e.match(/https?:\/\//);
                                  })) &&
                                  e.length
                              )
                                  return e[0].replace(/.*(https?:\/\/.+?)(:\d+)+\D*$/m, "$1");
                          }
                          return "";
                      },
                      scroll: function () {
                          var n = void 0 !== e.pageXOffset,
                              t = "CSS1Compat" === (e.document.compatMode || ""),
                              r = { x: 0, y: 0 };
                          return (
                              n
                                  ? "function" == typeof e.pageXOffset
                                      ? ((r.x = e.pageXOffset()), (r.y = e.pageYOffset()))
                                      : ((r.x = e.pageXOffset), (r.y = e.pageYOffset))
                                  : t
                                  ? ((r.x = e.document.documentElement.scrollLeft), (r.y = e.document.documentElement.scrollTop))
                                  : ((r.x = e.document.body.scrollLeft), (r.y = e.document.body.scrollTop)),
                              "number" == typeof r.sx && (r.sx = Math.round(r.sx)),
                              "number" == typeof r.sy && (r.sy = Math.round(r.sy)),
                              r
                          );
                      },
                      windowHeight: function () {
                          return e.innerHeight || e.document.documentElement.clientHeight || e.document.body.clientHeight;
                      },
                      windowWidth: function () {
                          return e.innerWidth || e.document.documentElement.clientWidth || e.document.body.clientWidth;
                      },
                      isNative: function (e) {
                          return !!e && e.toString && !e.hasOwnProperty("toString") && /\[native code\]/.test(String(e));
                      },
                      overwriteNative: function (e, t, r) {
                          e && r && (BOOMR.boomerang_frame !== BOOMR.window && n.nativeOverwrites.push({ obj: e, functionName: t, origFn: e[t] }), (e[t] = r));
                      },
                      isInteger: function (e) {
                          return (
                              Number.isInteger ||
                              function (e) {
                                  return "number" == typeof e && isFinite(e) && Math.floor(e) === e;
                              }
                          )(e);
                      },
                      forEach: function (e, n, t) {
                          if (BOOMR.utils.isArray(e) && "function" == typeof n) for (var r = e.length, o = 0; o < r; o++) e.hasOwnProperty(o) && n.call(t, e[o], o, e);
                      },
                      mark: function (e) {
                          var n = BOOMR.getPerformance();
                          n && "function" == typeof n.mark && !BOOMR.window.BOOMR_no_mark && n.mark("boomr:" + e);
                      },
                      measure: function (e, n, t) {
                          var r = BOOMR.getPerformance();
                          r && "function" == typeof r.measure && !BOOMR.window.BOOMR_no_mark && r.measure("boomr:" + e, n ? "boomr:" + n : void 0, t ? "boomr:" + t : void 0);
                      },
                  },
                  browser: {
                      results: {},
                      supportsPassive: function () {
                          if (void 0 === BOOMR.browser.results.supportsPassive) {
                              if (((BOOMR.browser.results.supportsPassive = !1), !Object.defineProperty)) return !1;
                              try {
                                  var e = Object.defineProperty({}, "passive", {
                                      get: function () {
                                          BOOMR.browser.results.supportsPassive = !0;
                                      },
                                  });
                                  window.addEventListener("test", null, e);
                              } catch (e) {}
                          }
                          return BOOMR.browser.results.supportsPassive;
                      },
                  },
                  init: function (t) {
                      var o,
                          i,
                          a = [
                              "autorun",
                              "beacon_auth_key",
                              "beacon_auth_token",
                              "beacon_with_credentials",
                              "beacon_disable_sendbeacon",
                              "beacon_url",
                              "beacon_url_force_https",
                              "beacon_type",
                              "site_domain",
                              "strip_query_string",
                              "user_ip",
                          ];
                      if (
                          (BOOMR.utils.mark("init"),
                          BOOMR_check_doc_domain(),
                          t || (t = {}),
                          void 0 !== t.log && (this.log = t.log),
                          this.log || (this.log = function () {}),
                          this.pageId || ((this.pageId = BOOMR.utils.generateId(8)), BOOMR.debug("Generated PageID: " + this.pageId)),
                          t.primary && n.handlers_attached)
                      )
                          return this;
                      for (i in ("string" == typeof t.site_domain && (this.session.domain = t.site_domain), void 0 !== t.autorun && (n.autorun = t.autorun), BOOMR.utils.mark("init:plugins:start"), this.plugins))
                          if (this.plugins.hasOwnProperty(i)) {
                              if (t[i] && t[i].hasOwnProperty("enabled") && !1 === t[i].enabled) {
                                  (n.disabled_plugins[i] = 1), "function" == typeof this.plugins[i].disable && this.plugins[i].disable();
                                  continue;
                              }
                              if (n.disabled_plugins[i]) {
                                  if (!t[i] || !t[i].hasOwnProperty("enabled") || !0 !== t[i].enabled) continue;
                                  "function" == typeof this.plugins[i].enable && this.plugins[i].enable(), delete n.disabled_plugins[i];
                              }
                              if ("function" == typeof this.plugins[i].init)
                                  try {
                                      BOOMR.utils.mark("init:plugins:" + i + ":start"),
                                          this.plugins[i].init(t),
                                          BOOMR.utils.mark("init:plugins:" + i + ":end"),
                                          BOOMR.utils.measure("init:plugins:" + i, "init:plugins:" + i + ":start", "init:plugins:" + i + ":end");
                                  } catch (e) {
                                      BOOMR.addError(e, i + ".init");
                                  }
                          }
                      for (BOOMR.utils.mark("init:plugins:end"), BOOMR.utils.measure("init:plugins", "init:plugins:start", "init:plugins:end"), o = 0; o < a.length; o++) void 0 !== t[a[o]] && (n[a[o]] = t[a[o]]);
                      return (
                          ((!n.handlers_attached && !t.wait) || (n.handlers_attached && n.waiting_for_config)) &&
                              (n.onloadfired || (void 0 !== n.autorun && !1 === n.autorun) || (BOOMR.hasBrowserOnloadFired() && (BOOMR.loadedLate = !0), BOOMR.attach_page_ready(BOOMR.page_ready_autorun)), (n.waiting_for_config = !1)),
                          n.handlers_attached
                              ? this
                              : (t.wait && (n.waiting_for_config = !0),
                                BOOMR.attach_page_ready(function () {
                                    BOOMR.t_onload || (BOOMR.t_onload = BOOMR.now());
                                }),
                                BOOMR.utils.addListener(e, "DOMContentLoaded", function () {
                                    n.fireEvent("dom_loaded");
                                }),
                                BOOMR.fireEvent("config", t),
                                BOOMR.subscribe("config", function (e) {
                                    e.beacon_url && (n.beacon_url = e.beacon_url);
                                }),
                                BOOMR.subscribe("spa_navigation", n.spaNavigation, null, n),
                                (function () {
                                    var t, o;
                                    for (
                                        void 0 !== s &&
                                            (BOOMR.utils.addListener(r, s, function () {
                                                n.fireEvent("visibility_changed");
                                            }),
                                            (n.lastVisibilityState = BOOMR.visibilityState()),
                                            BOOMR.subscribe("visibility_changed", function () {
                                                var e = BOOMR.visibilityState();
                                                (BOOMR.lastVisibilityEvent[e] = BOOMR.now()),
                                                    BOOMR.debug("Visibility changed from " + n.lastVisibilityState + " to " + e),
                                                    "prerender" === n.lastVisibilityState && "prerender" !== e && (BOOMR.addVar("vis.pre", "1"), n.fireEvent("prerender_to_visible")),
                                                    (n.lastVisibilityState = e);
                                            })),
                                            BOOMR.utils.addListener(r, "mouseup", n.xb_handler("click")),
                                            t = r.getElementsByTagName("form"),
                                            o = 0;
                                        o < t.length;
                                        o++
                                    )
                                        BOOMR.utils.addListener(t[o], "submit", n.xb_handler("form_submit"));
                                    e.onpagehide ||
                                        null === e.onpagehide ||
                                        BOOMR.utils.addListener(e, "unload", function () {
                                            BOOMR.window = e = null;
                                        }),
                                        BOOMR.boomerang_frame !== BOOMR.window && BOOMR.utils.addListener(BOOMR.boomerang_frame, "unload", n.onFrameUnloaded);
                                })(),
                                (n.handlers_attached = !0),
                                this)
                      );
                  },
                  attach_page_ready: function (n) {
                      BOOMR.hasBrowserOnloadFired() ? this.setImmediate(n, null, null, BOOMR) : e.onpagehide || null === e.onpagehide ? BOOMR.utils.addListener(e, "pageshow", n) : BOOMR.utils.addListener(e, "load", n);
                  },
                  page_ready_autorun: function (e) {
                      n.autorun && BOOMR.page_ready(e, !0);
                  },
                  page_ready: function (t, r) {
                      var o;
                      return (
                          r || "number" != typeof t || ((o = t), (t = null)),
                          t || (t = e.event),
                          t || (t = { name: "load" }),
                          r
                              ? "number" == typeof e.BOOMR_page_ready && ((t.timing = t.timing || {}), (t.timing.loadEventEnd = e.BOOMR_page_ready), BOOMR.addVar("pr", 1, !0))
                              : ((t.timing = t.timing || {}),
                                o ? (t.timing.loadEventEnd = o) : "number" == typeof e.BOOMR_page_ready ? (t.timing.loadEventEnd = e.BOOMR_page_ready) : (t.timing.loadEventEnd = BOOMR.now()),
                                BOOMR.addVar("pr", 1, !0)),
                          n.onloadfired ? this : (n.fireEvent("page_ready", t), (n.onloadfired = !0), this)
                      );
                  },
                  hasBrowserOnloadFired: function () {
                      var n = BOOMR.getPerformance();
                      return (r.readyState && "complete" === r.readyState) || (n && n.timing && n.timing.loadEventStart > 0) || e.BOOMR_onload > 0;
                  },
                  onloadFired: function () {
                      return n.onloadfired;
                  },
                  setImmediate: function (n, t, r, o) {
                      var i, a;
                      "undefined" != typeof Error && (a = (a = new Error()).stack ? a.stack.replace(/^Error/, "Called") : void 0),
                          (i = function () {
                              n.call(o || null, t, r || {}, a), (i = null);
                          }),
                          e.requestIdleCallback ? e.requestIdleCallback(i, { timeout: 1e3 }) : e.setImmediate ? e.setImmediate(i) : setTimeout(i, 10);
                  },
                  now:
                      Date.now ||
                      function () {
                          return new Date().getTime();
                      },
                  getPerformance: function () {
                      try {
                          if (BOOMR.window) return "performance" in BOOMR.window && BOOMR.window.performance ? BOOMR.window.performance : BOOMR.window.msPerformance || BOOMR.window.webkitPerformance || BOOMR.window.mozPerformance;
                      } catch (e) {}
                  },
                  hrNow: function () {
                      var e,
                          n,
                          t = BOOMR.getPerformance();
                      return t && t.now ? (e = t.now()) : ((n = (BOOMR.plugins.RT && BOOMR.plugins.RT.navigationStart && BOOMR.plugins.RT.navigationStart()) || BOOMR.t_lstart || BOOMR.t_start), (e = BOOMR.now() - n)), e;
                  },
                  visibilityState:
                      void 0 === a
                          ? function () {
                                return "visible";
                            }
                          : function () {
                                return r[a];
                            },
                  lastVisibilityEvent: {},
                  registerEvent: function (e) {
                      return n.events.hasOwnProperty(e) ? this : ((n.events[e] = []), this);
                  },
                  disable: function () {
                      n.clearEvents(), n.clearListeners();
                  },
                  fireEvent: function (e, t) {
                      return n.fireEvent(e, t);
                  },
                  subscribe: function (t, r, o, i, a) {
                      var s, u, l;
                      for (
                          t = t.toLowerCase(),
                              BOOMR.utils.mark("subscribe"),
                              BOOMR.utils.mark("subscribe:" + t),
                              n.translate_events[t] && (t = n.translate_events[t]),
                              n.events.hasOwnProperty(t) || (n.events[t] = []),
                              l = n.events[t],
                              s = 0;
                          s < l.length;
                          s++
                      )
                          if ((u = l[s]) && u.fn === r && u.cb_data === o && u.scope === i) return this;
                      return (
                          l.push({ fn: r, cb_data: o || {}, scope: i || null, once: a || !1 }),
                          "page_ready" === t && n.onloadfired && n.autorun && this.setImmediate(r, null, o, i),
                          ("page_unload" !== t && "before_unload" !== t) ||
                              (n.unloadEventsCount++,
                              (function () {
                                  var a;
                                  l.length;
                                  (a = function (t) {
                                      r && r.call(i, t || e.event, o), ++n.unloadEventCalled === n.unloadEventsCount && BOOMR.real_sendBeacon();
                                  }),
                                      "page_unload" === t && (e.onpagehide || null === e.onpagehide ? BOOMR.utils.addListener(e, "pagehide", a) : BOOMR.utils.addListener(e, "unload", a)),
                                      BOOMR.utils.addListener(e, "beforeunload", a);
                              })()),
                          this
                      );
                  },
                  addError: function (e, t, r) {
                      var o,
                          i = BOOMR.plugins.Errors;
                      BOOMR.utils.mark("add_error"),
                          BOOMR.error("Boomerang caught error: " + e + ", src: " + t + ", extra: " + r),
                          i && i.is_supported()
                              ? "string" == typeof e
                                  ? i.send({ message: e, extra: r, functionName: t, noStack: !0 }, i.VIA_APP, i.SOURCE_BOOMERANG)
                                  : ("string" == typeof t && (e.functionName = t), void 0 !== r && (e.extra = r), i.send(e, i.VIA_APP, i.SOURCE_BOOMERANG))
                              : ("string" != typeof e && ((o = String(e)).match(/^\[object/) && (o = e.name + ": " + (e.description || e.message).replace(/\r\n$/, "")), (e = o)),
                                void 0 !== t && (e = "[" + t + ":" + BOOMR.now() + "] " + e),
                                r && (e += ":: " + r),
                                n.errors[e] ? n.errors[e]++ : (n.errors[e] = 1));
                  },
                  isCrossOriginError: function (e) {
                      return (
                          "SecurityError" === e.name || ("TypeError" === e.name && "Permission denied" === e.message) || ("Error" === e.name && e.message && e.message.match(/^(Permission|Access is) denied/)) || -2146828218 === e.number
                      );
                  },
                  addVar: function (e, t, r) {
                      if ((BOOMR.utils.mark("add_var"), "string" == typeof e)) n.vars[e] = t;
                      else if ("object" == typeof e) {
                          var o,
                              i = e;
                          for (o in i) i.hasOwnProperty(o) && (n.vars[o] = i[o]);
                      }
                      return r && (n.singleBeaconVars[e] = 1), this;
                  },
                  appendVar: function (e, n) {
                      var t = BOOMR.getVar(e) || "";
                      return t && (t += ","), BOOMR.addVar(e, t + n), this;
                  },
                  removeVar: function (e) {
                      var t, r;
                      if (!arguments.length) return this;
                      for (r = 1 === arguments.length && BOOMR.utils.isArray(e) ? e : arguments, t = 0; t < r.length; t++) n.vars.hasOwnProperty(r[t]) && delete n.vars[r[t]];
                      return this;
                  },
                  hasVar: function (e) {
                      return n.vars.hasOwnProperty(e);
                  },
                  getVar: function (e) {
                      return n.vars[e];
                  },
                  setVarPriority: function (e, t) {
                      return "number" != typeof t || 1 !== Math.abs(t) ? this : ((n.varPriority[t][e] = 1), this);
                  },
                  setReferrer: function (e) {
                      n.r = e;
                  },
                  requestStart: function (e) {
                      var n = BOOMR.now();
                      return (
                          BOOMR.plugins.RT.startTimer("xhr_" + e, n),
                          {
                              loaded: function (t) {
                                  BOOMR.responseEnd(e, n, t);
                              },
                          }
                      );
                  },
                  readyToSend: function () {
                      var e;
                      for (e in this.plugins)
                          if (this.plugins.hasOwnProperty(e)) {
                              if (n.disabled_plugins[e]) continue;
                              if ("function" == typeof this.plugins[e].readyToSend && !1 === this.plugins[e].readyToSend()) return BOOMR.debug("Plugin " + e + " is not ready to send"), !1;
                          }
                      return !0;
                  },
                  responseEnd: function (e, t, r, o) {
                      if (((t = "number" == typeof t ? t : BOOMR.now()), (o = "number" == typeof o ? o : BOOMR.now()), !BOOMR.readyToSend()))
                          return (
                              BOOMR.debug("Attempted to call responseEnd before all plugins were Ready to Send, trying again..."),
                              void setTimeout(function () {
                                  BOOMR.responseEnd(e, t, r, o);
                              }, 1e3)
                          );
                      if (BOOMR.hasSentPageLoadBeacon() || BOOMR.utils.inArray(e.initiator, BOOMR.constants.BEACON_TYPE_SPAS))
                          if (n.beaconInQueue)
                              BOOMR.subscribe(
                                  "beacon",
                                  function () {
                                      BOOMR.responseEnd(e, t, r, o);
                                  },
                                  null,
                                  BOOMR,
                                  !0
                              );
                          else if (((n.beaconInQueue = !0), "object" == typeof e)) {
                              if (!e.url) return void BOOMR.debug("BOOMR.responseEnd: First argument must have a url property if it's an object");
                              n.fireEvent("xhr_load", e);
                          } else BOOMR.real_sendBeacon(), BOOMR.addVar("xhr.pg", e), BOOMR.plugins.RT.startTimer("xhr_" + e, t), n.fireEvent("xhr_load", { name: "xhr_" + e, data: r, timing: { loadEventEnd: o } });
                      else
                          BOOMR.subscribe(
                              "page_load_beacon",
                              function () {
                                  BOOMR.responseEnd(e, t, r, o);
                              },
                              null,
                              BOOMR,
                              !0
                          );
                  },
                  uninstrumentXHR: function () {},
                  instrumentXHR: function () {},
                  uninstrumentFetch: function () {},
                  instrumentFetch: function () {},
                  sendBeacon: function (e) {
                      return e && (n.beacon_url_override = e), n.beaconQueued || ((n.beaconQueued = !0), BOOMR.setImmediate(BOOMR.real_sendBeacon, null, null, BOOMR)), !0;
                  },
                  sendBeaconWhenReady: function (e, t, r) {
                      if (n.beaconInQueue)
                          BOOMR.subscribe(
                              "beacon",
                              function () {
                                  BOOMR.sendBeaconWhenReady(e, t, r);
                              },
                              null,
                              BOOMR,
                              !0
                          );
                      else {
                          for (var o in ((n.beaconInQueue = !0), e)) e.hasOwnProperty(o) && BOOMR.addVar(o, e[o], !0);
                          "function" == typeof t && void 0 !== r && t.apply(r), BOOMR.sendBeacon();
                      }
                  },
                  real_sendBeacon: function () {
                      var t,
                          o = [],
                          i = {};
                      if (!n.beaconQueued) return !1;
                      for (t in (BOOMR.utils.mark("send_beacon:start"), (n.beaconQueued = !1), BOOMR.debug("Checking if we can send beacon"), this.plugins))
                          if (this.plugins.hasOwnProperty(t)) {
                              if (n.disabled_plugins[t]) continue;
                              if (!this.plugins[t].is_complete(n.vars)) return BOOMR.debug("Plugin " + t + " is not complete, deferring beacon send"), !1;
                          }
                      if (!(window && window.Image && window.navigator && BOOMR.window)) return BOOMR.debug("DOM not fully available, not sending a beacon"), !1;
                      var a = BOOMR.utils.inArray(n.vars["http.initiator"], BOOMR.constants.BEACON_TYPE_SPAS),
                          s = void 0 === n.vars["http.initiator"] || a;
                      for (t in (n.vars.pgu || (n.vars.pgu = a ? r.URL : r.URL.replace(/#.*/, "")),
                      (n.vars.pgu = BOOMR.utils.cleanupURL(n.vars.pgu)),
                      (n.vars.u && !a) || (n.vars.u = n.vars.pgu),
                      n.vars.pgu === n.vars.u && delete n.vars.pgu,
                      n.r ? (n.vars.r = BOOMR.utils.cleanupURL(n.r)) : delete n.vars.r,
                      (n.vars.v = BOOMR.version),
                      BOOMR.snippetVersion && (n.vars.sv = BOOMR.snippetVersion),
                      (n.vars.sm = BOOMR.snippetMethod || "i"),
                      BOOMR.session.enabled && ((n.vars["rt.si"] = BOOMR.session.ID + "-" + Math.round(BOOMR.session.start / 1e3).toString(36)), (n.vars["rt.ss"] = BOOMR.session.start), (n.vars["rt.sl"] = BOOMR.session.length)),
                      BOOMR.visibilityState() &&
                          ((n.vars["vis.st"] = BOOMR.visibilityState()),
                          BOOMR.lastVisibilityEvent.visible && (n.vars["vis.lv"] = BOOMR.now() - BOOMR.lastVisibilityEvent.visible),
                          BOOMR.lastVisibilityEvent.hidden && (n.vars["vis.lh"] = BOOMR.now() - BOOMR.lastVisibilityEvent.hidden)),
                      (n.vars["ua.plt"] = navigator.platform),
                      (n.vars["ua.vnd"] = navigator.vendor),
                      this.pageId && (n.vars.pid = this.pageId),
                      (n.vars.n = ++this.beaconsSent),
                      e !== window && ("if", (n.vars.if = "")),
                      n.errors))
                          n.errors.hasOwnProperty(t) && o.push(t + (n.errors[t] > 1 ? " (*" + n.errors[t] + ")" : ""));
                      for (t in (o.length > 0 && (n.vars.errors = o.join("\n")), (n.errors = {}), n.fireEvent("before_beacon", n.vars), n.vars)) n.vars.hasOwnProperty(t) && (i[t] = n.vars[t]);
                      for (var u in (BOOMR.removeVar(["qt", "pgu"]), n.singleBeaconVars)) n.singleBeaconVars.hasOwnProperty(u) && BOOMR.removeVar(u);
                      return (
                          (n.singleBeaconVars = {}),
                          !n.hasSentPageLoadBeacon &&
                              s &&
                              ((n.hasSentPageLoadBeacon = !0),
                              BOOMR.setImmediate(function () {
                                  n.fireEvent("page_load_beacon", i);
                              })),
                          BOOMR.session.rate_limited
                              ? (BOOMR.debug("Skipping because we're rate limited"), !1)
                              : ((n.beaconInQueue = !1), BOOMR.sendBeaconData(i), BOOMR.utils.mark("send_beacon:end"), BOOMR.utils.measure("send_beacon", "send_beacon:start", "send_beacon:end"), !0)
                      );
                  },
                  hasSentPageLoadBeacon: function () {
                      return n.hasSentPageLoadBeacon;
                  },
                  sendBeaconData: function (t) {
                      var r,
                          o,
                          i,
                          a,
                          s,
                          u = [],
                          l = !0;
                      if ((BOOMR.debug("Ready to send beacon: " + BOOMR.utils.objectToString(t)), (n.beacon_url = n.beacon_url_override || n.beacon_url), !n.beacon_url)) return BOOMR.debug("No beacon URL, so skipping."), !1;
                      if (!n.beaconUrlAllowed(n.beacon_url)) return BOOMR.debug("Beacon URL not allowed: " + n.beacon_url), !1;
                      if (0 === t.length) return !1;
                      if (
                          (n.fireEvent("beacon", t),
                          (u = this.getVarsOfPriority(t, -1)),
                          (r = this.getVarsOfPriority(t, 1)),
                          (o = u.concat(this.getVarsOfPriority(t, 0), r).join("&")),
                          n.beacon_url_force_https && n.beacon_url.match(/^\/\//) && (n.beacon_url = "https:" + n.beacon_url),
                          (i = n.beacon_url + (n.beacon_url.indexOf("?") > -1 ? "&" : "?") + o),
                          "GET" === n.beacon_type
                              ? ((l = !0),
                                i.length > BOOMR.constants.MAX_GET_LENGTH && ((window.console && (console.warn || console.log)) || function () {})("Boomerang: Warning: Beacon may not be sent via GET due to payload size > 2000 bytes"))
                              : ("POST" === n.beacon_type || i.length > BOOMR.constants.MAX_GET_LENGTH) && (l = !1),
                          e &&
                              e.navigator &&
                              "function" == typeof e.navigator.sendBeacon &&
                              BOOMR.utils.isNative(e.navigator.sendBeacon) &&
                              "function" == typeof e.Blob &&
                              "GET" !== n.beacon_type &&
                              void 0 === n.beacon_auth_token &&
                              !n.beacon_disable_sendbeacon)
                      ) {
                          var c = new e.Blob([o + "&sb=1"], { type: "application/x-www-form-urlencoded" });
                          if (e.navigator.sendBeacon(n.beacon_url, c)) return !0;
                      }
                      if ((BOOMR.orig_XMLHttpRequest || (e && e.XMLHttpRequest) || (l = !0), l)) {
                          try {
                              a = new Image();
                          } catch (e) {
                              return BOOMR.debug("Image is not a constructor, not sending a beacon"), !1;
                          }
                          a.src = i;
                      } else {
                          s = new (BOOMR.window.orig_XMLHttpRequest || BOOMR.orig_XMLHttpRequest || BOOMR.window.XMLHttpRequest)();
                          try {
                              this.sendXhrPostBeacon(s, o);
                          } catch (e) {
                              (s = new BOOMR.boomerang_frame.XMLHttpRequest()), this.sendXhrPostBeacon(s, o);
                          }
                      }
                      return !0;
                  },
                  hasSentPageLoadBeacon: function () {
                      return n.hasSentPageLoadBeacon;
                  },
                  sendXhrPostBeacon: function (e, t) {
                      e.open("POST", n.beacon_url),
                          e.setRequestHeader("Content-type", "application/x-www-form-urlencoded"),
                          void 0 !== n.beacon_auth_token && (void 0 === n.beacon_auth_key && (n.beacon_auth_key = "Authorization"), e.setRequestHeader(n.beacon_auth_key, n.beacon_auth_token)),
                          n.beacon_with_credentials && (e.withCredentials = !0),
                          e.send(t);
                  },
                  getVarsOfPriority: function (e, t) {
                      var r,
                          o = [],
                          i = 0 !== t ? n.varPriority[t] : e;
                      for (r in i) i.hasOwnProperty(r) && e.hasOwnProperty(r) && (o.push(this.getUriEncodedVar(r, void 0 === e[r] ? "" : e[r])), 0 !== t && delete e[r]);
                      return o;
                  },
                  getUriEncodedVar: function (e, n) {
                      return null == n && (n = ""), "object" == typeof n && (n = BOOMR.utils.serializeForUrl(n)), encodeURIComponent(e) + "=" + encodeURIComponent(n);
                  },
                  getResourceTiming: function (e, n, t) {
                      var r,
                          o = BOOMR.getPerformance();
                      try {
                          if (o && "function" == typeof o.getEntriesByName) {
                              if (!(r = o.getEntriesByName(e)) || !r.length) return;
                              if (!("function" != typeof t || ((r = BOOMR.utils.arrayFilter(r, t)) && r.length))) return;
                              return r.length > 1 && "function" == typeof n && r.sort(n), r[r.length - 1];
                          }
                      } catch (e) {
                          BOOMR.warn("getResourceTiming:" + e);
                      }
                  },
                  setBeaconUrlsAllowed: function (e) {
                      n.beacon_urls_allowed = e;
                  },
              }),
              BOOMR.url)
          ) {
              var l = BOOMR.window.document.createElement("a");
              (l.href = BOOMR.url), (t.url = l.href);
          } else t.url = t.utils.getMyURL();
          var c;
          delete BOOMR_start,
              "number" == typeof BOOMR_lstart ? ((t.t_lstart = BOOMR_lstart), delete BOOMR_lstart) : "number" == typeof BOOMR.window.BOOMR_lstart && (t.t_lstart = BOOMR.window.BOOMR_lstart),
              "number" == typeof BOOMR.window.BOOMR_onload && (t.t_onload = BOOMR.window.BOOMR_onload),
              "object" == typeof console && void 0 !== console.log
                  ? (t.log = function (e, n, t) {
                        console.log("(" + BOOMR.now() + ") {" + BOOMR.pageId + "}: " + t + ": [" + n + "] " + e);
                    })
                  : (t.log = function () {}),
              (c = function (e) {
                  return function (n, t) {
                      return this.log(n, e, "boomerang" + (t ? "." + t : "")), this;
                  };
              }),
              (t.debug = c("debug")),
              (t.info = c("info")),
              (t.warn = c("warn")),
              (t.error = c("error"));
          try {
              var d = t.getPerformance();
              d &&
                  "function" == typeof d.now &&
                  /\[native code\]/.test(String(d.now)) &&
                  d.timing &&
                  d.timing.navigationStart &&
                  (t.now = function () {
                      return Math.round(d.now() + d.timing.navigationStart);
                  });
          } catch (e) {}
          n.checkLocalStorageSupport(),
              (function () {
                  var e;
                  for (e in t) t.hasOwnProperty(e) && (BOOMR[e] = t[e]);
                  BOOMR.xhr_excludes || (BOOMR.xhr_excludes = {});
              })(),
              (function () {
                  if (
                      ((BOOMR.checkWindowOverrides = function (e) {
                          if (!Object.getOwnPropertyNames) return [];
                          var n,
                              t,
                              o = [];
                          function i(n) {
                              (function (n) {
                                  var t = n.split("."),
                                      r = e;
                                  for (; r && t.length; )
                                      try {
                                          r = r[t.shift()];
                                      } catch (e) {
                                          return !1;
                                      }
                                  return (
                                      "function" == typeof r &&
                                      !(function (e, n) {
                                          if (
                                              "console.assert" === n ||
                                              "Function.prototype" === n ||
                                              n.indexOf("onload") >= 0 ||
                                              n.indexOf("onbeforeunload") >= 0 ||
                                              n.indexOf("onerror") >= 0 ||
                                              n.indexOf("onload") >= 0 ||
                                              n.indexOf("NodeFilter") >= 0
                                          )
                                              return !0;
                                          return e.toString && !e.hasOwnProperty("toString") && /\[native code\]/.test(String(e));
                                      })(r, n)
                                  );
                              })(n) && o.push(n);
                          }
                          !(function () {
                              var e = r.createElement("iframe");
                              (e.style.display = "none"), (e.src = "javascript:false"), r.getElementsByTagName("script")[0].parentNode.appendChild(e), (n = e.contentWindow), (t = Object.getOwnPropertyNames(n));
                          })();
                          for (var a = 0; a < t.length; a++) {
                              var s = t[a];
                              if ("window" !== s && "self" !== s && "top" !== s && "parent" !== s && "frames" !== s && n[s] && ("object" == typeof n[s] || "function" == typeof n[s])) {
                                  i(s);
                                  var u = [];
                                  try {
                                      u = Object.getOwnPropertyNames(n[s]);
                                  } catch (e) {}
                                  for (var l = 0; l < u.length; l++) i([s, u[l]].join("."));
                                  if (n[s].prototype) {
                                      u = Object.getOwnPropertyNames(n[s].prototype);
                                      for (l = 0; l < u.length; l++) i([s, "prototype", u[l]].join("."));
                                  }
                              }
                          }
                          return o;
                      }),
                      (BOOMR.checkDocumentOverrides = function (e) {
                          return BOOMR.utils.arrayFilter(["readyState", "domain", "hidden", "URL", "cookie"], function (n) {
                              return e.hasOwnProperty(n);
                          });
                      }),
                      "true" === BOOMR.utils.getQueryParamValue("overridden") && e && e.Object && Object.getOwnPropertyNames)
                  ) {
                      var n = [].concat(BOOMR.checkWindowOverrides(e)).concat(BOOMR.checkDocumentOverrides(r));
                      n.length > 0 && BOOMR.warn("overridden: " + n.sort());
                  }
              })(),
              i("onBoomerangLoaded", { BOOMR: BOOMR }, !0);
      }
  })(window);
